package com.care.boot.board;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

@Controller
public class BoardController {
	@Autowired private BoardService service;
	
	//[board form]
	@RequestMapping("boardForm")
	public String boardForm(Model model,
			@RequestParam(value="currentPage", required = false) 
	String cp) { service.boardForm(cp, model);
	return "board/boardForm";
	}
	
	// [ Board Write & Upload ]
	@Autowired private HttpSession session;
	@RequestMapping("boardWrite")
	public String boardWrite() {
		String sessionId = (String) session.getAttribute("id");
		if(sessionId == null)
			return "redirect:login";
		return "board/boardWrite";
	}
	
	@PostMapping("boardWriteProc")
	public String boardWriteProc(MultipartHttpServletRequest multi) {
		String sessionId = (String)session.getAttribute("id");
		if(sessionId == null)
			return "redirect:login";
		String path = service.boardWriteProc(multi);
		return path;
	}
	
	// [ Board Content & Download ]
		@RequestMapping("boardContent")
		public String boardContent(String no, Model model) {
			BoardDTO board = service.boardContent(no);
			if(board == null) {
				return "redirect:boardForm";
			}
			
			model.addAttribute("board", board);
			return "board/boardContent";
		}
		
		@RequestMapping("boardDownload")
		public void boardDownload(String no, HttpServletResponse response) {
			service.boardDownload(no, response);
		}
}
