server:
  port: 8080
  servlet:
    session:
      tracking-modes: cookie # URL에 JSessionID가 표시되지 않도록 설정
      cookie:
        http-only: true # JSessionID 쿠키가 JavaScript에서 접근되지 않도록 설정(XSS 공격으로부터 보호)
        secure: true

# database 연동 설정
spring:
  datasource:
    url: jdbc:mysql://${DB_HOST}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false
    # 404 에러 페이지를 표시하지 않게 하고, 존재하지 않는 핸들러에 대한 예외를 발생시키도록 합니다.
  mvc:
    throw-exception-if-no-handler-found=true

  # spring data jpa 설정
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: update

    prefix: classpath:/templates/
    suffix: .html
    cache: false

  cloud:
    aws:
      region:
        static: ap-northeast-2 # 사용할 AWS 리전
      stack:
        auto: false
      s3:
        bucket: ${S3_BUCKET}
  ##key추가
  file:
    upload:
      directory: src/main/resources/static/image/


  spring:
    servlet:
      multipart:
        max-file-size: 10MB
        max-request-size: 10MB=
api:
  keys:
    kakao_client_id: ${kakao_client_id}
    kakao_redirect_uri: ${kakao_redirect_uri}
    naver_client_id: ${naver_client_id}
    naver_client_secret: ${naver_client_secret}
